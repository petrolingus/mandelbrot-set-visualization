apiVersion: apps/v1
kind: Deployment
metadata:
  name: process-service
  labels:
    app.kubernetes.io/name: process-service
spec:
  replicas: 16
  selector:
    matchLabels:
      app.kubernetes.io/name: process-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: process-service
    spec:
      containers:
        - name: process-service
          image: petrolingus/process-service:latest
          imagePullPolicy: Always
          env:
            - name: BREAKDOWN_PROBABILITY
              value: '4'
            - name: BAD_GATEWAY_PROBABILITY
              value: '-1'
            - name: TIMEOUT_PROBABILITY
              value: '-1'
            - name: IS_COLORED
              value: 'false'
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          livenessProbe: # Проба работоспособности проверяет, выполняется контейнер или нет.
            httpGet:
              path: /probe/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 1
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          readinessProbe: # Проба готовности проверяет, готово ли приложение обслуживать запросы.
            httpGet:
              path: /probe/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20 # через сколько секунд после запуска контейнера начинаются пробы работоспособности или готовности.
            periodSeconds: 1 # сколько секунд проходит между пробами.
            timeoutSeconds: 2 #  через сколько секунд истекает время ожидания пробы.
            successThreshold: 1 # сколько проб подряд должно завершиться успехом, чтобы проверка считалась успешной после проваленной пробы.
            failureThreshold: 3 # сколько проб должно провалиться, чтобы пришлось перезапускать контейнер. (или pod был помечен как неготовый, если речь о проверке готовности).
      restartPolicy: Always
      terminationGracePeriodSeconds: 1